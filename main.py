import re
import asyncio
import time
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command
from aiogram import F

BOT_TOKEN = "7784812888:AAGDbKddmy117EyFPDPsA_FvSJcdXOe5nLc"
CHANNEL_USERNAME = "@seeyounvkz"
ADMIN_ID = 8004750966

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
storage = MemoryStorage()
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=storage)

COOLDOWN_SECONDS = 300
POST_DELAY = 30

BAD_WORDS = [
    "—Ö—É–π", "–ø–∏–∑–¥", "–µ–±–∞", "–µ–±–ª", "–º—É–¥–∞", "–≥–∞–Ω–¥", "—Å—É–∫–∞", "—à–∞–ª–∞", "–±–ª—è–¥", "—É–µ–±", "–≤—ã–±–ª—è–¥",
    "fuck", "shit", "fag", "bitch", "dick", "fuc", "fuk", "suka", "blya", "yeb", "huy", "xuy", "x—É–π",
    "—Öy–π", "—Ö—É–µ", "—Ö—É–∏", "c—É–∫–∞", "–ø–∏–¥", "xy–π", "–Ωax", "–≥a–Ω–¥", "—ë–±", "–µ6", "e6a", "—É6–ª—é–¥", "fuk", "n–∞—Ö", "c—É—á", "m—É–¥a"
]

AD_WORDS = [
    "–∫—É–ø–∏", "–ø—Ä–æ–¥–∞–º", "–∑–∞–∫–∞–∑", "—Å–∫–∏–¥–∫", "–∞–∫—Ü–∏—è", "—Ä–∞—Å–ø—Ä–æ–¥–∞–∂", "–º–∞–≥–∞–∑–∏–Ω", "—Ä–µ–∫–ª–∞–º", "–±–µ—Å–ø–ª–∞—Ç–Ω–æ", "–ø—Ä–æ–º–æ–∫–æ–¥",
    "–¥–æ—Å—Ç–∞–≤–∫", "–∫–∞–Ω–∞–ª", "—á–∞—Ç", "–≥—Ä—É–ø–ø", "—Ç–µ–ª–µ–≥—Ä–∞–º", "t.me", "vk.com", "–∏–Ω—Å—Ç–∞–≥—Ä–∞–º", "–¥–∏—Ä–µ–∫—Ç",
    "–≤–∞–π–±–µ—Ä", "–≤–∞—Ç—Å–∞–ø", "viber", "whatsapp", "telegram", "—Ç–≥", "–∑–∞–π–¥–∏", "–ø–µ—Ä–µ–π–¥–∏", "—Å—Å—ã–ª–∫–∞", "—Ä–µ–∫–ª–∞–º–∞", "–ø—Ä–æ–¥–∞–∂–∞", "–∫—É–ø–∏—Ç—å", "—Ü–µ–Ω–∞"
]

DOMAIN_PATTERNS = [
    r"(?:https?://|www\.)\S+",
    r"\b\w+\.(?:ru|com|—Ä—Ñ|net|org|kz)\b",
    r"\b\w+[\.\s]*(?:—Ä—É|–∫–æ–º|—Ä—Ñ|–Ω–µ—Ç)\b",
    r"\b(?:—Ç–æ—á–∫–∞|—Ç—á–∫|dot)[\s\.]*(?:—Ä—É|com|—Ä—Ñ)\b",
    r"\w+@\w+\.\w+",
    r"\b[\w\.-]+\.(?:—Ä—Ñ|com|ru|net|org)\b"
]

REPLACEMENTS = {
    'a': '–∞', 'e': '–µ', 'o': '–æ', 'p': '—Ä', 'c': '—Å', 'y': '—É', 'x': '—Ö',
    'b': '–≤', 'm': '–º', 'k': '–∫', 't': '—Ç', 'n': '–ø'
}

user_cooldowns = {}

def normalize(text):
    if not text:
        return ""
    text = text.lower()
    for latin, cyrillic in REPLACEMENTS.items():
        text = text.replace(latin, cyrillic)
    return re.sub(r'[^–∞-—èa-z—ë\s]', '', text)

def contains_ads(text):
    if not text:
        return False
    for pattern in DOMAIN_PATTERNS:
        if re.search(pattern, text, re.IGNORECASE):
            return True
    clean_text = normalize(text)
    return any(ad_word in clean_text for ad_word in AD_WORDS)

def contains_bad_words(text):
    if not text:
        return False
    clean_text = normalize(text)
    return any(bad_word in clean_text for bad_word in BAD_WORDS)

class PostStates(StatesGroup):
    waiting_for_content = State()

@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –•–æ—á–µ—à—å –ø—Ä–∏–∑–Ω–∞—Ç—å—Å—è –∫–æ–º—É-—Ç–æ –∏–ª–∏ –Ω–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ —Å —É–ª–∏—Ü—ã?\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–ª–∏ —Ç–µ–∫—Å—Ç. –ú—ã –≤—Å—ë –∞–Ω–æ–Ω–∏–º–Ω–æ –æ–ø—É–±–ª–∏–∫—É–µ–º!",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send")]
        ])
    )

@dp.callback_query(F.data == "send")
async def request_post(callback_query: types.CallbackQuery, state: FSMContext):
    user_id = callback_query.from_user.id
    current_time = time.time()

    if user_id in user_cooldowns and current_time - user_cooldowns[user_id] < COOLDOWN_SECONDS:
        cooldown_left = int(COOLDOWN_SECONDS - (current_time - user_cooldowns[user_id]))
        mins = cooldown_left // 60
        secs = cooldown_left % 60
        await callback_query.message.answer(
            f"‚è≥ –°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ {mins} –º–∏–Ω. {secs} —Å–µ–∫."
        )
        return

    await callback_query.message.answer("üì∏ –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç:")
    await state.set_state(PostStates.waiting_for_content)
    await callback_query.answer()

@dp.message(PostStates.waiting_for_content)
async def process_post(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user = message.from_user

    user_cooldowns[user_id] = time.time()
    text_content = ""
    photo_id = None

    if message.photo:
        photo_id = message.photo[-1].file_id
        text_content = message.caption if message.caption else ""
    elif message.text:
        text_content = message.text
    else:
        await message.reply("‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏ —Ñ–æ—Ç–æ!")
        await state.clear()
        return

    if contains_bad_words(text_content):
        await message.reply("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞!")
        await state.clear()
        return

    if contains_ads(text_content):
        await message.reply(
            "üö´ –ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ –∏ —Å—Å—ã–ª–∫–∏! –ù–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è:\n- –ö–æ–Ω—Ç–∞–∫—Ç—ã\n- –°—Å—ã–ª–∫–∏\n- –£–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–æ—Ü—Å–µ—Ç–µ–π\n- –¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏")
        await state.clear()
        return

    await message.reply(f"‚è≥ –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è (–∑–∞–¥–µ—Ä–∂–∫–∞ {POST_DELAY} —Å–µ–∫.)...")
    await asyncio.sleep(POST_DELAY)

    try:
        if photo_id:
            await bot.send_photo(chat_id=CHANNEL_USERNAME, photo=photo_id, caption=text_content)
        else:
            await bot.send_message(chat_id=CHANNEL_USERNAME, text=text_content)
        await message.reply("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!")

        # üîí –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É –∏–Ω—Ñ—ã –æ —é–∑–µ—Ä–µ
        admin_text = (
            f"üì¨ –ù–æ–≤—ã–π –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name}\n"
            f"üÜî ID: {user.id}\n"
            f"üîó Username: @{user.username if user.username else '–Ω–µ—Ç'}\n\n"
            f"üìÑ –¢–µ–∫—Å—Ç: {text_content}"
        )
        await bot.send_message(chat_id=ADMIN_ID, text=admin_text)

    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {str(e)}")

    await state.clear()

if __name__ == "__main__":
    dp.run_polling(bot)
